package interfaceExample;

// 매개 변수의 다형성 테스트

// 자동 타입 변환은 필드의 값을 대입할 때에도 발생하지만 주로 메서드를 호출할 때 많이 발생한다.
// 상속에서는 매개 변수를 부모 타입으로 선언하고 호출할 때에는 자식 객체를 대입
// 매개변수를 인터페이스 타입으로 선언하고 호출 할때에는 구현 객체를 대입한다.
public class DriverExample {
	public static void main(String[] args) {
		Driver driver = new Driver();
		
		Bus bus = new Bus();
		Taxi taxi = new Taxi();
		
		// driver 메서드는 vehicle 타입을 매개변수로 선언 하였지만 
		// bus 객체가 매개 값으로 사용이 될 시 자동 타입 변환이 발생한다.
		// 매개 변수 타입이 인터페이스일 경우 어떠한 구현 객체도 매개값으로 사용할 수 있고 
		// 어떤 구현 객체가 제공되느냐에 따라서 메서드의 실행 결과가 다양해질 수 있음(매개변수의 다형성)
		driver.driver(bus);
		driver.driver(taxi);
		
		
		System.out.println("===================");
		// 강제 타입 변환 
		// 구현 객체가 인터페이스 타입으로 자동 변환하면 인터페이스는 선언된 메서드만 사용 가능하다는 제약사항이 따름
		// ex) 인터페이스엔 3개의 메서드가 선언되어있고 구현 클래스엔 5개의 메서드가 선언되어 있다면
		// 인터페이스로 호출 가능한 메서드는 3개뿐이다.
		
		// 경우에 따라선 구현 클래스에서 선언된 필드, 메서드를 사용할 경우도 발생 이때 강제 타입 변환으로 호출한다.
		// 구현 클래스 변수 = (구현 클래스) 인터페이스 변수;
		
		// 인터페이스 타입에 Bus 객체 대입
		Vehile ve = new Bus();
		// 인터페이스 변수를 Bus 구현 클래스로 강제 타입 변환
		Bus bus1 = (Bus) ve;
		
		bus1.run();
		// 인터페이스에 정의되지않은 메서드 호출 가능 
		bus1.check();
	}
}
